№;Тип Данных;опраторы/ключевые слова;Краткое описание;Аналог;Описание;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1;извлечение данных;SELECT;извлечение данных;;"Чтобы при помощи оператора SELECT извлечь данные из базы, нужно указать как минимум две вещи: что именно нужно извлечь и откуда";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2;"3,2";FROM ;откуда/ из какой таблицы;;"ключевое слово FROM указывает на таблицу, из которой извлекаются данные.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3;"3,2";*;групповой символ;;"Помимо извлечения конкретных полей, с помощью оператора SELECT можно запросить все поля, не указывая каждое из них. Для этого вместо имен полей следует указать специальный групповой символ *.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
4;"3,2";DISTINCT;уникальные записи;;"Чтобы извлечь только уникальные записи, необходимо воспользоваться ключевым словом DISTINCT, которое указывается непосредственно перед именами полей.применяется ко всем полям, а не только к тому, перед которым оно стоит, поэтому при его использовании для двух и более полей одинаковыми будут считаться лишь те записи, которые имеют одинаковые значения по всем полям.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
5;"3,2";LIMIT;ограничение кол-ва запросов;;"LIMIT 3 говорит о том, что должно быть извлечено не более трех записей. Если необходимо получить следующие три записи, можно задать начальную точку извлечения с помощью ключевого слова OFFSET.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
6;"3,2";OFFSET;начальная тчк. запроса;;"Записи при использовании ключевого слова OFFSET индексируются с нуля, поэтому, например, выражение LIMIT 1 OFFSET 1 вернет вторую запись, а не первую.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
7;"3,2";AS;псевдоним;;"При извлечении различных полей таблицы они сохраняют свои исходные имена в результирующей таблице, однако при необходимости можно воспользоваться псевдонимами, чтобы дать им альтернативные имена, если псевдоним состоит из нескольких слов, он должен быть представлен строкой, заключенной в апострофы.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
8;сортировка данных;ORDER BY;сортировка по возрастанию;ASC использовать не обязательно;"Чтобы извлечь информацию из базы данных в отсортированном виде, достаточно дополнить запрос оператором ORDER BY и указать название поля, по которому необходимо осуществить сортировку. В запросе оператор ORDER BY должен следовать после операторов SELECT и FROM, в противном случае запрос завершится с ошибкой. Чтобы выполнить сортировку по нескольким полям, нужно перечислить их через запятую. Вместо имен полей оператор ORDER BY позволяет указывать порядковые номера полей. пример order by 1,2,4";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
9;"3,3";DESC;сортировка по убыванию;;"Чтобы сортировка выполнялась в порядке убывания, необходимо после имени поля указать ключевое слово DESC. Если необходимо отсортировать записи в порядке убывания значений нескольких полей, нужно обязательно указать ключевое слово DESC после каждого из них.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
10;фильтрация данных;WHERE;фильтрация;;" оператор WHERE, позволяет указывать определенные условия при извлечении записей. Если запись удовлетворяет этим условиям, то она попадает в результирующую таблицу, в противном случае отбрасывается.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
11;"3,4";BETWEEN;диапазон значений;;"пример : WHERE streams BETWEEN 50000 AND 100000. Как видно из примера выше, при использовании оператора BETWEEN нужно указывать два значения: нижнюю и верхнюю границы диапазона. Оба значения должны быть разделены ключевым словом AND. При этом извлекаются все значения из диапазона, включая те, что равны граничным значениям.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
12;"3,4";BINARY ;указание регистразависимости;;Для учета регистра необходимо преобразовать одну из сравниваемых строк в тип данных BINARY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
13;"3,5";AND;логич.оператор;;"Чтобы отфильтровать данные по нескольким полям, необходимо воспользоваться оператором AND. Он используется для извлечения только тех записей, которые удовлетворяют всем указанным условиям. Оператор AND говорит о том, что должны быть возвращены только те записи, которые удовлетворяют всем перечисленным условиям.Количество условий после оператора WHERE может быть больше двух, в таком случае каждое из них должно отделяться отдельным оператором AND.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
14;"3,5";OR;логич.оператор;;" AND и OR. Комбинируя их, можно создавать сложные фильтры.  сперва обрабатывается логический оператор AND, а потом уже — логический оператор OR Чтобы составить корректный запрос, необходимо воспользоваться скобками и точно сгруппировать необходимые условия. В нашем случае в скобки нужно заключить часть условия с оператором OR, чтобы она имела больший приоритет и выполнялась первой. Действие оператора OR отличается от действия оператора AND. Он говорит о том, что должны быть извлечены только те записи, которые удовлетворяют хотя бы одному условию.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
15;"3,5";IN ;аналог оператора OR;;"Оператор IN позволяет определить, совпадает ли значение поля с одним из перечисленных значений.Однако оператор IN имеет некоторое преимущество перед оператором OR. Например, при работе с большим количеством значений синтаксис логического оператора IN гораздо понятнее. Также при использовании оператора IN совместно с операторами AND и OR намного легче управлять порядком их обработки";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
16;"3,5";NOT ;отрицает условие след.за ним;;"Логический оператор NOT служит только одной цели — отрицать условие, следующее за ним.Однако в более сложных условиях можно воспользоваться оператором NOT в связке с оператором IN, что окажется предпочтительнее оператора !=.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
17;"3,5";NOT IN;связка операторов;;"Связка операторов NOT и IN хоть и довольно полезна, но недостаточно наглядна. На практике для определения несоответствия списку значений используется более очевидный оператор NOT IN, выполняющий ровно то же, что и связка операторов NOT и IN.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
18;"3,6";LIKE;оператор для метасимволов;;"предусмотрен поиск с использованием метасимволов, которые позволяют создавать шаблоны поиска и находить значения, соответствующие не чему-либо конкретному, а именно этим шаблонам.Метасимволы сами по себе являются специальными знаками, которые трактуются языком особым образом. Чтобы использовать их в условиях отбора записей, необходимо задействовать оператор LIKE";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
19;"3,6";%;метасимвол;;"Наиболее часто используемым метасимволом является знак процента (%), который в шаблоне поиска соответствует последовательности любых символов, причем число символов в последовательности может быть от 0 и более. ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
20;"3,6";"""_""";метасимвол;;"Еще одним полезным метасимволом является знак нижнего подчеркивания (_), который в шаблоне поиска соответствует одному любому символу. Например, с его помощью можно составить запрос, который поможет отыскать информацию о песнях, названия которых начинаются с какого-либо четырехсимвольного слова.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
21;"3,6";ESCAPE ;экранирование (ключ.слово);;" Метасимволы в шаблоне поиска соответствуют набору символов или одному любому символу, однако иногда может понадобиться отыскать совпадение только для самого метасимвола, например, символа процента (%). В подобных случаях используется экранирование с помощью ключевого слова ESCAPE, которое указывается после шаблона поиска и определяет символ, отвечающий за экранирование.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
22;"3,7";CONCAT;склейка полей;;"Операцию объединения или склеивания нескольких значений часто называют конкатенацией. Например, конкатенацией строк bee и geek является строка beegeek.В SQL для объединения нескольких значений используется функция CONCAT(). Она принимает переменное количество аргументов, выполняет их конкатенацию и возвращает полученный результат. Результатом функции CONCAT() всегда является строка, однако аргументы функции могут принадлежать любым типам, поскольку функция неявно преобразует все аргументы в строки перед объединением.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
23;"3,7";CONCAT_WS;склейка полей;;"Для конкатенации значений в SQL существует дополнительная функция — CONCAT_WS(). В отличие от функции CONCAT(), она не только объединяет значения, но и добавляет между ними разделитель. Разделитель указывается в качестве первого аргумента, объединяемые значения — в качестве всех остальных.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
24;"4,1";CHAR_LENGTH;вычисление колличества символов;;Функция CHAR_LENGTH() используется для вычисления длины строки. Она принимает в качестве аргумента строку и возвращает количество символов в ней.;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
25;"4,1";UPPER;перевод строки в верхний регистр;;"Функция UPPER() используется для перевода строки в верхний регистр. Она принимает в качестве аргумента строку, преобразует все ее символы в верхний регистр и возвращает полученный результат.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
26;"4,1";LOWER;перевод строки в нижний регистр;;"Функция LOWER() используется для перевода строки в нижний регистр. Она принимает в качестве аргумента строку, преобразует все ее символы в нижний регистр и возвращает полученный результат.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
27;"4,1";LTRIM;отсечение левых пробелов;;"Функция LTRIM() используется для отсечения ведущих пробелов. Она принимает в качестве аргумента строку, удаляет все пробелы из ее левой части и возвращает полученный результат.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
28;"4,1";RTRIM;отсечение правых пробелов;;"Похожим образом работает функция RTRIM() за исключением того, что она удаляет пробелы из правой части строки, а не левой.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
29;"4,1";REVERSE;переворот строки (справа налево);;Функция REVERSE() используется для переворота строки. Она принимает в качестве аргумента строку и возвращает ее с обратным порядком символов.;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
30;"4,1";REPEAT;повтор строки;;Функция REPEAT() используется для повторения строки. ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
31;"4,1";LPAD;увеличение строки (СЛЕВА);;"Функция LPAD() используется для увеличения длины строки до определенного значения путем добавления в ее начало другой строки. Она принимает три аргумента  Если желаемая длина строки меньше длины исходной строки, то функция LPAD() сокращает исходную строку путем отбрасывания правых символов.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
32;"4,1";RPAD;увеличение строки (СПРАВА);;"Похожим образом себя ведет функция RPAD() за исключением того, что она дополняет строку не слева, а справа.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
33;"4,2";LEFT;извлечение символов слева;;Функция LEFT() используется для извлечения определенного количества символов из начала строки. Она принимает два аргумента;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
34;"4,2";RIGHT;извлечение символов справа;;"Функция RIGHT() используется для извлечения определенного количества символов из конца строки. Она принимает два аргумента Аналогично функции LEFT(), если количество извлекаемых символов меньше 1, функция RIGHT() вернет пустую строку, если больше длины строки — всю строку.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
35;"4,2";LOCATE;местополож.искомого символа; ;Функция LOCATE() используется для определения местоположения подстроки в строке. Она принимает три аргумента;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
36;"4,2";REPLACE;замена подстроки в строке;;"Функция REPLACE() используется для замены подстроки в строке. Она принимает три аргумента В отличие от функции LOCATE(), функция REPLACE() выполняет замену с учетом регистра.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
37;"4,3";SUBSTRING;извлечение подстроки;;Функция SUBSTRING() используется для извлечения подстроки из строки. Она принимает три аргумента;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
38;"4,3";SUBSTRING_INDEX;извлечение подстроки с помощью…;;"Функция SUBSTRING_INDEX() используется для извлечения подстроки из строки с помощью разделителя. Она принимает три аргумента. Количество появлений разделителя может быть отрицательным числом, в таком случае извлечение подстроки происходит с конца.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
39;"4,3";TRIM;удаление подстроки;;"Функция TRIM() используется для удаления всех вхождений подстроки из начала и/или конца строки. Синтаксис данной функции несколько отличается от предыдущих, так как при ее вызове аргументы не указываются через запятую, а связываются с помощью ключевого слова FROM: TRIM(<ключевое слово LEADING, TRAILING или BOTH> <удаляемая подстрока> FROM <исходная строка>)";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
40;"4,4";DIV ;целочисленное деление;;Оператор DIV используется для целочисленного деления одного числа на другое.;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
41;"4,4";MOD ;вычисление остатка;;Оператор MOD используется для вычисления остатка от деления одного числа на другое.;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
42;"4,4";ABS;вычисление модуля;;Функция ABS() используется для вычисления модуля числа. Она принимает в качестве аргумента число и возвращает его модуль.;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
43;"4,4";ROUND;округление;;Функция ROUND() используется для округления числа. Она принимает два аргумента ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
44;"4,4";POW;возведение в степень;;Функция POW() используется для возведения числа в определенную степень. Она принимает два аргумента ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
45;"4,4";SQRT;квадратный корень;;"Функция SQRT() используется для вычисления квадратного корня. Она принимает в качестве аргумента число, извлекает из него квадратный корень ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
46;"4,4";RAND;генерация случайных чисел;;"Функция RAND() используется для генерации случайных чисел. При вызове без аргументов она возвращает случайное число с плавающей точкой в диапазоне [0, 1). Функция RAND() в комбинации с операторами ORDER BY и LIMIT позволяет извлекать из таблицы определенное количество случайных записей.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
47;"4,4";FLOOR;округление в меньшую сторону;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
48;"4,4";CEILING;округление в большую сторону;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
49;"4,5";DEGREES;из радиан в градусы;;"Функция DEGREES() используется для перевода значения из радиан в градусы. Она принимает в качестве аргумента значение в радианах, конвертирует его в градусы и возвращает полученный результат.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
50;"4,5";RADIANS;из градусов в радианы;;"Похожим образом себя ведет функция RADIANS() за тем исключением, что она выполняет обратный перевод — из градусов в радианы.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
51;"4,5";PI;получение числа Пи;;Функция PI() используется для получения числа пи (ππ). Она не принимает никаких аргументов и возвращает число пи с точностью до шести знаков после запятой.;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
52;"4,5";"SIN(), COS() , TAN()";"синус, косинус, тангенс";;"Функции SIN(), COS() и TAN() используются для вычисления синуса, косинуса и тангенса соответственно. Каждая функция принимает в качестве аргумента значение в радианах и возвращает соответствующую тригонометрическую величину.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
53;"4,5";LEAST;поиск минимального значения;;Функция LEAST() используется для поиска минимального значения. Она принимает переменное количество аргументов (не меньше двух) и возвращает наименьший из них.;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
54;"4,5";GREATEST;поиск максимального значения;;"Похожим образом себя ведет функция GREATEST() за тем исключением, что она выполняет поиск наибольшего значения, а не наименьшего.";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
55;"4,5";CONV;изменение системы счисления;;Функция CONV() используется для перевода числа из одной системы счисления в другую. Она принимает три аргумента;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
56;"4,5";FORMAT;округление и форматирование;;Функция FORMAT() используется для округления и форматирования числа. Она принимает два аргумента;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
